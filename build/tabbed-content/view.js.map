{"version":3,"file":"tabbed-content/view.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACxD,MAAMC,IAAI,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,0BAA0B,CAAC;EAElED,IAAI,CAACE,OAAO,CAAEC,KAAK,IAAK;IACtB;IACA,MAAMC,cAAc,GAAGD,KAAK,CAACF,gBAAgB,CAAC,2BAA2B,CAAC;IAC1E,MAAMI,aAAa,GAAGF,KAAK,CAACF,gBAAgB,CAAC,0BAA0B,CAAC;IAExEG,cAAc,CAACF,OAAO,CAAC,CAACI,MAAM,EAAEC,KAAK,KAAK;MACxCD,MAAM,CAACP,gBAAgB,CAAC,YAAY,EAAE,MAAM;QAC1C;QACAM,aAAa,CAACH,OAAO,CAAEM,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC1D;QACA,IAAIL,aAAa,CAACE,KAAK,CAAC,EAAE;UACxBF,aAAa,CAACE,KAAK,CAAC,CAACE,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;QAC9C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,aAAa,GAAGT,KAAK,CAACF,gBAAgB,CAAC,+BAA+B,CAAC;IAC7E,MAAMY,cAAc,GAAGV,KAAK,CAACF,gBAAgB,CAAC,iCAAiC,CAAC;IAEhFW,aAAa,CAACV,OAAO,CAAC,CAACI,MAAM,EAAEC,KAAK,KAAK;MACvCD,MAAM,CAACP,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACrC;QACAa,aAAa,CAACV,OAAO,CAAEY,GAAG,IAAKA,GAAG,CAACL,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC9DG,cAAc,CAACX,OAAO,CAAEa,OAAO,IAAKA,OAAO,CAACN,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACvE;QACA,IAAIE,aAAa,CAACL,KAAK,CAAC,EAAE;UACxBK,aAAa,CAACL,KAAK,CAAC,CAACE,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;QAC9C;QACA,IAAIE,cAAc,CAACN,KAAK,CAAC,EAAE;UACzBM,cAAc,CAACN,KAAK,CAAC,CAACE,SAAS,CAACE,GAAG,CAAC,QAAQ,CAAC;QAC/C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC,C","sources":["webpack://tabbed-content/./src/tabbed-content/view.js"],"sourcesContent":["/**\n * This file contains the JavaScript code for the Tabbed Content block.\n * \n * @package tabbed-content\n */\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const root = document.querySelectorAll('.proprietary-tools-block');\n\n  root.forEach((block) => {\n    // Desktop tab functionality\n    const desktopButtons = block.querySelectorAll('.desktop-only .tab-button');\n    const desktopPanels = block.querySelectorAll('.desktop-only .tab-panel');\n\n    desktopButtons.forEach((button, index) => {\n      button.addEventListener('mouseenter', () => {\n        // Remove all active classes from desktop panels\n        desktopPanels.forEach((p) => p.classList.remove('active'));\n        // Add active to the hovered tab's panel\n        if (desktopPanels[index]) {\n          desktopPanels[index].classList.add('active');\n        }\n      });\n    });\n\n    // Mobile accordion functionality\n    const mobileButtons = block.querySelectorAll('.mobile-only .accordion-title');\n    const mobileContents = block.querySelectorAll('.mobile-only .accordion-content');\n\n    mobileButtons.forEach((button, index) => {\n      button.addEventListener('click', () => {\n        // Remove all active classes from mobile content\n        mobileButtons.forEach((btn) => btn.classList.remove('active'));\n        mobileContents.forEach((content) => content.classList.remove('active'));\n        // Add active to the clicked accordion's content\n        if (mobileButtons[index]) {\n          mobileButtons[index].classList.add('active');\n        }\n        if (mobileContents[index]) {\n          mobileContents[index].classList.add('active');\n        }\n      });\n    });\n  });\n});\n"],"names":["document","addEventListener","root","querySelectorAll","forEach","block","desktopButtons","desktopPanels","button","index","p","classList","remove","add","mobileButtons","mobileContents","btn","content"],"sourceRoot":""}